{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\martu\\\\github\\\\GoogleBooksReact\\\\google-books-react\\\\client\\\\src\\\\pages\\\\Books.js\";\nimport React, { Component } from \"react\";\nimport BookContainer from \"../components/BookContainer\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport Nav from \"../components/Nav\";\nimport \"./books.css\"; //import { url } from \"inspector\";\n\nclass Books extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: [],\n      title: \"\",\n      authors: \"\",\n      description: \"\",\n      thumbnail: \"\",\n      link: \"\"\n    };\n\n    this.loadBooks = () => {\n      API.getBooks().then(res => this.setState({\n        books: res.data,\n        title: this.state.title,\n        authors: this.state.authors,\n        description: this.state.description,\n        thumbnail: this.state.thumbnail,\n        link: this.state.link\n      })).catch(err => console.log(err));\n    };\n\n    this.deleteBook = id => {\n      API.deleteBook(id).then(res => this.loadBooks()).catch(err => console.log(err));\n    };\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSave = event => {\n      event.preventDefault();\n\n      if (this.state.title) {\n        API.saveBook({\n          title: this.state.title,\n          authors: this.state.authors,\n          description: this.state.description,\n          thumbnail: this.state.thumbnail,\n          link: this.state.link\n        }).then(res => this.loadBooks()).catch(err => console.log(err));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.loadBooks();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"books-back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Col, {\n      size: \"md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"What Books Should I Read?\")), React.createElement(BookContainer, {\n      handleFormSave: this.handleFormSave,\n      loadBooks: this.loadBooks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(Col, {\n      size: \"md-6 sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Books On My List\")), this.state.books.length ? React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.books.map(book => React.createElement(ListItem, {\n      key: book._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/books/\" + book._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, book.title, \" by \", book.authors)), React.createElement(DeleteBtn, {\n      onClick: () => this.deleteBook(book._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })))) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"No Results to Display\")))));\n  }\n\n}\n\nexport default Books;","map":{"version":3,"sources":["C:\\Users\\martu\\github\\GoogleBooksReact\\google-books-react\\client\\src\\pages\\Books.js"],"names":["React","Component","BookContainer","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Nav","Books","state","books","title","authors","description","thumbnail","link","loadBooks","getBooks","then","res","setState","data","catch","err","console","log","deleteBook","id","handleInputChange","event","target","name","value","handleFormSave","preventDefault","saveBook","componentDidMount","render","length","map","book","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport BookContainer from \"../components/BookContainer\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport Nav from \"../components/Nav\"\nimport \"./books.css\";\n//import { url } from \"inspector\";\n\n\nclass Books extends Component {\n  state = {\n    books: [],\n    title: \"\",\n    authors: \"\",\n    description: \"\",\n    thumbnail: \"\",\n    link: \"\",\n  };\n\n  componentDidMount() {\n    this.loadBooks();\n  }\n\n  loadBooks = () => {\n    API.getBooks()\n      .then(res =>\n        this.setState({ books: res.data, \n          title: this.state.title,\n          authors: this.state.authors,\n          description: this.state.description,\n          thumbnail: this.state.thumbnail,\n          link: this.state.link})\n      )\n      .catch(err => console.log(err));\n  };\n\n  deleteBook = id => {\n    API.deleteBook(id)\n      .then(res => this.loadBooks())\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSave = event => {\n    event.preventDefault();\n    if (this.state.title) {\n      API.saveBook({\n        title: this.state.title,\n        authors: this.state.authors,\n        description: this.state.description,\n        thumbnail: this.state.thumbnail,\n        link: this.state.link\n      })\n        .then(res => this.loadBooks())\n        .catch(err => console.log(err));\n    }\n  };\n\n  \n  render() {\n    return (\n      <div className=\"books-back\">\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>What Books Should I Read?</h1>\n            </Jumbotron>\n            <BookContainer\n            handleFormSave={this.handleFormSave}\n            loadBooks={this.loadBooks}></BookContainer>\n         </Col>\n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>Books On My List</h1>\n            </Jumbotron>\n            {this.state.books.length ? (\n              <List>\n                {this.state.books.map(book => (\n                  <ListItem key={book._id}>\n                    <Link to={\"/books/\" + book._id}>\n                      <strong>\n                        {book.title} by {book.authors}\n                      </strong>\n                    </Link>\n                    <DeleteBtn onClick={() => this.deleteBook(book._id)} />\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col> \n        </Row>\n      </Container>\n      </div>\n    );\n  }\n}\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}